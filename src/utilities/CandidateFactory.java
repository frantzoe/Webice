//
// Generated by Lincoln on: 2018.05.15 at 12:38:45 AM CEST
//

package utilities;

import collections.Candidates;
import models.Candidate;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;

/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the utilities package. 
 * <p>An CandidateFactory allows you to programatically
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class CandidateFactory {

    private final static QName _Candidate_QNAME = new QName("", "candidate");

    /**
     * Create a new CandidateFactory that can be used to create new instances of schema derived classes for package: utilities
     * 
     */
    public CandidateFactory() {
    }

    /**
     * Create an instance of {@link Candidates }
     * 
     */
    public Candidates createCandidates() {
        return new Candidates();
    }

    /**
     * Create an instance of {@link Candidate }
     * 
     */
    public Candidate createCandidate() {
        return new Candidate();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Candidate }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "candidate")
    public JAXBElement<Candidate> createCandidate(Candidate value) {
        return new JAXBElement<Candidate>(_Candidate_QNAME, Candidate.class, null, value);
    }

}
